

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 02 22:29:42 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     0007                     	;# 
   176     0008                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001B                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001D                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     0086                     	;# 
   206     0087                     	;# 
   207     0088                     	;# 
   208     0089                     	;# 
   209     008C                     	;# 
   210     008D                     	;# 
   211     008E                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0094                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0008                     _PORTD	set	8
   229     0009                     _PORTEbits	set	9
   230     0088                     _TRISD	set	136
   231     0089                     _TRISEbits	set	137
   232                           
   233                           	psect	cinit
   234     07FC                     start_initialization:	
   235                           ; #config settings
   236                           
   237     07FC                     __initialization:
   238     07FC                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241     07FC                     __end_of__initialization:
   242     07FC  0183               	clrf	3
   243     07FD  120A  118A  2FDA   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	cstackCOMMON
   246     0070                     __pcstackCOMMON:
   247     0070                     ?_InitApp:
   248     0070                     ?_SendCMD:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ??_SendCMD:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259     0070                     	ds	3
   260     0073                     SendCMD@cmd:
   261                           
   262                           ; 1 bytes @ 0x3
   263     0073                     	ds	1
   264     0074                     ??_InitApp:
   265     0074                     ??_main:	
   266                           ; 1 bytes @ 0x4
   267                           
   268                           
   269                           ; 1 bytes @ 0x4
   270     0074                     	ds	3
   271                           
   272                           	psect	maintext
   273     07DA                     __pmaintext:	
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 6 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, pclath, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0
   295 ;;      Temps:          3       0       0       0       0
   296 ;;      Totals:         3       0       0       0       0
   297 ;;Total ram usage:        3 bytes
   298 ;; Hardware stack levels required when called: 2
   299 ;; This function calls:
   300 ;;		_InitApp
   301 ;;		_SendCMD
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307     07DA                     _main:	
   308                           ;psect for function _main
   309                           
   310     07DA                     l13:	
   311                           ;incstack = 0
   312                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   313                           ;main.c: 7:     while(1){
   314                           
   315     07DA                     l644:
   316                           
   317                           ;main.c: 8:         InitApp();
   318     07DA  120A  118A  27B5  120A  118A  	fcall	_InitApp
   319     07DF                     l646:
   320                           
   321                           ;main.c: 11:         PORTEbits.RE0 = 1;
   322     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   323     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   324     07E1  1409               	bsf	9,0	;volatile
   325     07E2                     l648:
   326                           
   327                           ;main.c: 12:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   328     07E2  3006               	movlw	6
   329     07E3  00F6               	movwf	??_main+2
   330     07E4  3013               	movlw	19
   331     07E5  00F5               	movwf	??_main+1
   332     07E6  30AD               	movlw	173
   333     07E7  00F4               	movwf	??_main
   334     07E8                     u17:
   335     07E8  0BF4               	decfsz	??_main,f
   336     07E9  2FE8               	goto	u17
   337     07EA  0BF5               	decfsz	??_main+1,f
   338     07EB  2FE8               	goto	u17
   339     07EC  0BF6               	decfsz	??_main+2,f
   340     07ED  2FE8               	goto	u17
   341     07EE  2FEF               	nop2
   342     07EF                     l650:
   343                           
   344                           ;main.c: 13:         SendCMD(0b00110000);
   345     07EF  3030               	movlw	48
   346     07F0  120A  118A  27C2  120A  118A  	fcall	_SendCMD
   347     07F5                     l652:
   348                           
   349                           ;main.c: 14:         PORTEbits.RE0 =0;
   350     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   351     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   352     07F7  1009               	bcf	9,0	;volatile
   353     07F8  2FDA               	goto	l13
   354     07F9  120A  118A  2800   	ljmp	start
   355     07FC                     __end_of_main:
   356                           
   357                           	psect	text1
   358     07B5                     __ptext1:	
   359 ;; *************** function _InitApp *****************
   360 ;; Defined at:
   361 ;;		line 22 in file "functions.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; Hardware stack levels required when called: 1
   382 ;; This function calls:
   383 ;;		_SendCMD
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389     07B5                     _InitApp:	
   390                           ;psect for function _InitApp
   391                           
   392     07B5                     l638:	
   393                           ;incstack = 0
   394                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;functions.c: 23:     TRISEbits.TRISE2 = 0;
   398     07B5  1683               	bsf	3,5	;RP0=1, select bank1
   399     07B6  1303               	bcf	3,6	;RP1=0, select bank1
   400     07B7  1109               	bcf	9,2	;volatile
   401                           
   402                           ;functions.c: 24:     TRISEbits.TRISE1 = 0;
   403     07B8  1089               	bcf	9,1	;volatile
   404                           
   405                           ;functions.c: 25:     TRISEbits.TRISE0 = 0;
   406     07B9  1009               	bcf	9,0	;volatile
   407     07BA                     l640:
   408                           
   409                           ;functions.c: 26:     TRISD = 0X00;
   410     07BA  0188               	clrf	8	;volatile
   411     07BB                     l642:
   412                           
   413                           ;functions.c: 28:     SendCMD(0b00001000 | 0b00000100 | 0b00000010 | 0b00000001);
   414     07BB  300F               	movlw	15
   415     07BC  120A  118A  27C2  120A  118A  	fcall	_SendCMD
   416     07C1                     l38:
   417     07C1  0008               	return
   418     07C2                     __end_of_InitApp:
   419                           
   420                           	psect	text2
   421     07C2                     __ptext2:	
   422 ;; *************** function _SendCMD *****************
   423 ;; Defined at:
   424 ;;		line 14 in file "functions.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  cmd             1    wreg     unsigned char 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  cmd             1    3[COMMON] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         1       0       0       0       0
   440 ;;      Temps:          3       0       0       0       0
   441 ;;      Totals:         4       0       0       0       0
   442 ;;Total ram usage:        4 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;;		_InitApp
   449 ;;		_WriteChar
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453     07C2                     _SendCMD:	
   454                           ;psect for function _SendCMD
   455                           
   456                           
   457                           ;incstack = 0
   458                           ; Regs used in _SendCMD: [wreg+status,2]
   459                           ;SendCMD@cmd stored from wreg
   460     07C2  00F3               	movwf	SendCMD@cmd
   461     07C3                     l630:
   462                           
   463                           ;functions.c: 15:     PORTD = cmd;
   464     07C3  0873               	movf	SendCMD@cmd,w
   465     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   466     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   467     07C6  0088               	movwf	8	;volatile
   468     07C7                     l632:
   469                           
   470                           ;functions.c: 16:     PORTEbits.RE2 = 1;
   471     07C7  1509               	bsf	9,2	;volatile
   472                           
   473                           ;functions.c: 17:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   474     07C8  3006               	movlw	6
   475     07C9  00F2               	movwf	??_SendCMD+2
   476     07CA  3013               	movlw	19
   477     07CB  00F1               	movwf	??_SendCMD+1
   478     07CC  30AD               	movlw	173
   479     07CD  00F0               	movwf	??_SendCMD
   480     07CE                     u27:
   481     07CE  0BF0               	decfsz	??_SendCMD,f
   482     07CF  2FCE               	goto	u27
   483     07D0  0BF1               	decfsz	??_SendCMD+1,f
   484     07D1  2FCE               	goto	u27
   485     07D2  0BF2               	decfsz	??_SendCMD+2,f
   486     07D3  2FCE               	goto	u27
   487     07D4  2FD5               	nop2
   488     07D5                     l634:
   489                           
   490                           ;functions.c: 18:     PORTEbits.RE2 = 0;
   491     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   492     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   493     07D7  1109               	bcf	9,2	;volatile
   494     07D8                     l636:
   495                           
   496                           ;functions.c: 19:     PORTD = 0;
   497     07D8  0188               	clrf	8	;volatile
   498     07D9                     l35:
   499     07D9  0008               	return
   500     07DA                     __end_of_SendCMD:
   501     007E                     btemp	set	126	;btemp
   502     007E                     wtemp0	set	126
   503                           
   504                           	psect	idloc
   505                           
   506                           ;Config register IDLOC0 @ 0x2000
   507                           ;	unspecified, using default values
   508     2000                     	org	8192
   509     2000  3FFF               	dw	16383
   510                           
   511                           ;Config register IDLOC1 @ 0x2001
   512                           ;	unspecified, using default values
   513     2001                     	org	8193
   514     2001  3FFF               	dw	16383
   515                           
   516                           ;Config register IDLOC2 @ 0x2002
   517                           ;	unspecified, using default values
   518     2002                     	org	8194
   519     2002  3FFF               	dw	16383
   520                           
   521                           ;Config register IDLOC3 @ 0x2003
   522                           ;	unspecified, using default values
   523     2003                     	org	8195
   524     2003  3FFF               	dw	16383
   525                           
   526                           	psect	config
   527                           
   528                           ;Config register CONFIG @ 0x2007
   529                           ;	Oscillator Selection bits
   530                           ;	FOSC = XT, XT oscillator
   531                           ;	Watchdog Timer Enable bit
   532                           ;	WDTE = OFF, WDT disabled
   533                           ;	Power-up Timer Enable bit
   534                           ;	PWRTE = ON, PWRT enabled
   535                           ;	Brown-out Reset Enable bit
   536                           ;	BOREN = OFF, BOR disabled
   537                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   538                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   539                           ;	Data EEPROM Memory Code Protection bit
   540                           ;	CPD = OFF, Data EEPROM code protection off
   541                           ;	Flash Program Memory Write Enable bits
   542                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   543                           ;	In-Circuit Debugger Mode bit
   544                           ;	DEBUG = 0x1, unprogrammed default
   545                           ;	Flash Program Memory Code Protection bit
   546                           ;	CP = OFF, Code protection off
   547     2007                     	org	8199
   548     2007  3F31               	dw	16177

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SendCMD
    _InitApp->_SendCMD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              4 COMMON     3     3      0
                            _InitApp
                            _SendCMD
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      15
                            _SendCMD
 ---------------------------------------------------------------------------------
 (1) _SendCMD                                              4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
     _SendCMD
   _SendCMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 02 22:29:42 2022

                     l13 07DA                       l35 07D9                       l38 07C1  
                     u17 07E8                       u27 07CE                      l630 07C3  
                    l632 07C7                      l640 07BA                      l634 07D5  
                    l642 07BB                      l650 07EF                      l636 07D8  
                    l652 07F5                      l644 07DA                      l638 07B5  
                    l646 07DF                      l648 07E2                     _main 07DA  
                   btemp 007E                     start 0000          __end_of_InitApp 07C2  
        __end_of_SendCMD 07DA                    ?_main 0070               SendCMD@cmd 0073  
                  _PORTD 0008                    _TRISD 0088                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                ??_InitApp 0074                ??_SendCMD 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07DA  
                _InitApp 07B5                  _SendCMD 07C2                  __ptext1 07B5  
                __ptext2 07C2     end_of_initialization 07FC                _PORTEbits 0009  
              _TRISEbits 0089      start_initialization 07FC                ___latbits 0002  
               ?_InitApp 0070                 ?_SendCMD 0070  
