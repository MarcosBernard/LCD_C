

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 09:49:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232                           
   233                           	psect	idataCOMMON
   234     0775                     __pidataCOMMON:
   235                           
   236                           ;initializer for _mensaje
   237     0775  3448               	retlw	72
   238     0776  344F               	retlw	79
   239     0777  344C               	retlw	76
   240     0778  3441               	retlw	65
   241     0779  3421               	retlw	33
   242     0008                     _PORTD	set	8
   243     0007                     _PORTCbits	set	7
   244     0087                     _TRISCbits	set	135
   245     0088                     _TRISD	set	136
   246                           
   247                           	psect	cinit
   248     07DE                     start_initialization:	
   249                           ; #config settings
   250                           
   251     07DE                     __initialization:
   252                           
   253                           ; Initialize objects allocated to COMMON
   254     07DE  120A  118A  2775  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   255     07E3  00F0               	movwf	__pdataCOMMON& (0+127)
   256     07E4  120A  118A  2776  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   257     07E9  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   258     07EA  120A  118A  2777  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   259     07EF  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   260     07F0  120A  118A  2778  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   261     07F5  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   262     07F6  120A  118A  2779  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   263     07FB  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   264     07FC                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267     07FC                     __end_of__initialization:
   268     07FC  0183               	clrf	3
   269     07FD  120A  118A  2F88   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	dataCOMMON
   272     0070                     __pdataCOMMON:
   273     0070                     _mensaje:
   274     0070                     	ds	5
   275                           
   276                           	psect	cstackCOMMON
   277     0075                     __pcstackCOMMON:
   278     0075                     ?_InitApp:
   279     0075                     ?_print:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0075                     ?_SendChar:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0075                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0075                     ?_SendCMD:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0075                     ??_SendCMD:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296     0075                     	ds	1
   297     0076                     SendCMD@cmd:
   298                           
   299                           ; 1 bytes @ 0x1
   300     0076                     	ds	1
   301     0077                     ??_InitApp:
   302     0077                     ??_SendChar:	
   303                           ; 1 bytes @ 0x2
   304                           
   305     0077                     SendChar@character:	
   306                           ; 1 bytes @ 0x2
   307                           
   308                           
   309                           ; 1 bytes @ 0x2
   310     0077                     	ds	1
   311     0078                     ??_print:
   312                           
   313                           ; 1 bytes @ 0x3
   314     0078                     	ds	1
   315     0079                     print@chardir:
   316                           
   317                           ; 1 bytes @ 0x4
   318     0079                     	ds	1
   319     007A                     ??_main:
   320                           
   321                           	psect	maintext
   322     0788                     __pmaintext:	
   323                           ; 1 bytes @ 0x5
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 8 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : B00/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels required when called: 3
   349 ;; This function calls:
   350 ;;		_InitApp
   351 ;;		_print
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357     0788                     _main:	
   358                           ;psect for function _main
   359                           
   360     0788                     l676:	
   361                           ;incstack = 0
   362                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   363                           
   364                           
   365                           ;main.c: 9:     InitApp();
   366     0788  120A  118A  27BF  120A  118A  	fcall	_InitApp
   367     078D                     l678:
   368                           
   369                           ;main.c: 10:     print(&mensaje[0]);
   370     078D  3070               	movlw	(low (_mensaje| 0))& (0+255)
   371     078E  120A  118A  27A9  120A  118A  	fcall	_print
   372     0793                     l13:	
   373                           ;main.c: 11:     while(1){
   374                           
   375     0793                     l14:	
   376                           ;main.c: 13:     }
   377                           
   378     0793  2F93               	goto	l13
   379     0794  120A  118A  2800   	ljmp	start
   380     0797                     __end_of_main:
   381                           
   382                           	psect	text1
   383     07A9                     __ptext1:	
   384 ;; *************** function _print *****************
   385 ;; Defined at:
   386 ;;		line 16 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;  chardir         1    wreg     PTR unsigned char 
   389 ;;		 -> mensaje(5), 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  chardir         1    4[COMMON] PTR unsigned char 
   392 ;;		 -> mensaje(5), 
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         1       0       0       0       0
   404 ;;      Temps:          1       0       0       0       0
   405 ;;      Totals:         2       0       0       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels used: 1
   408 ;; Hardware stack levels required when called: 2
   409 ;; This function calls:
   410 ;;		_SendChar
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416     07A9                     _print:	
   417                           ;psect for function _print
   418                           
   419                           
   420                           ;incstack = 0
   421                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   422                           ;print@chardir stored from wreg
   423     07A9  00F9               	movwf	print@chardir
   424     07AA                     l668:
   425                           
   426                           ;main.c: 17:     while(*chardir != 0){
   427     07AA  2FB7               	goto	l674
   428     07AB                     l670:
   429                           
   430                           ;main.c: 18:         SendChar(*chardir);
   431     07AB  0879               	movf	print@chardir,w
   432     07AC  0084               	movwf	4
   433     07AD  0800               	movf	0,w
   434     07AE  120A  118A  277A  120A  118A  	fcall	_SendChar
   435     07B3                     l672:
   436                           
   437                           ;main.c: 19:         chardir++;
   438     07B3  3001               	movlw	1
   439     07B4  00F8               	movwf	??_print
   440     07B5  0878               	movf	??_print,w
   441     07B6  07F9               	addwf	print@chardir,f
   442     07B7                     l674:
   443                           
   444                           ;main.c: 17:     while(*chardir != 0){
   445     07B7  0879               	movf	print@chardir,w
   446     07B8  0084               	movwf	4
   447     07B9  0800               	movf	0,w
   448     07BA  1D03               	btfss	3,2
   449     07BB  2FBD               	goto	u11
   450     07BC  2FBE               	goto	u10
   451     07BD                     u11:
   452     07BD  2FAB               	goto	l670
   453     07BE                     u10:
   454     07BE                     l22:
   455     07BE  0008               	return
   456     07BF                     __end_of_print:
   457                           
   458                           	psect	text2
   459     077A                     __ptext2:	
   460 ;; *************** function _SendChar *****************
   461 ;; Defined at:
   462 ;;		line 37 in file "functions.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  character       1    wreg     unsigned char 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  character       1    2[COMMON] unsigned char 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         1       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         1       0       0       0       0
   480 ;;Total ram usage:        1 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; Hardware stack levels required when called: 1
   483 ;; This function calls:
   484 ;;		_SendCMD
   485 ;; This function is called by:
   486 ;;		_print
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490     077A                     _SendChar:	
   491                           ;psect for function _SendChar
   492                           
   493                           
   494                           ;incstack = 0
   495                           ; Regs used in _SendChar: [wreg+status,2+status,0+pclath+cstack]
   496                           ;SendChar@character stored from wreg
   497     077A  00F7               	movwf	SendChar@character
   498     077B                     l646:
   499                           
   500                           ;functions.c: 38:     PORTCbits.RC2 = 1;
   501     077B  1283               	bcf	3,5	;RP0=0, select bank0
   502     077C  1303               	bcf	3,6	;RP1=0, select bank0
   503     077D  1507               	bsf	7,2	;volatile
   504     077E                     l648:
   505                           
   506                           ;functions.c: 39:     SendCMD(character);
   507     077E  0877               	movf	SendChar@character,w
   508     077F  120A  118A  2797  120A  118A  	fcall	_SendCMD
   509     0784                     l650:
   510                           
   511                           ;functions.c: 40:     PORTCbits.RC2 = 0;
   512     0784  1283               	bcf	3,5	;RP0=0, select bank0
   513     0785  1303               	bcf	3,6	;RP1=0, select bank0
   514     0786  1107               	bcf	7,2	;volatile
   515     0787                     l46:
   516     0787  0008               	return
   517     0788                     __end_of_SendChar:
   518                           
   519                           	psect	text3
   520     07BF                     __ptext3:	
   521 ;; *************** function _InitApp *****************
   522 ;; Defined at:
   523 ;;		line 24 in file "functions.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 1
   544 ;; This function calls:
   545 ;;		_SendCMD
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551     07BF                     _InitApp:	
   552                           ;psect for function _InitApp
   553                           
   554     07BF                     l652:	
   555                           ;incstack = 0
   556                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
   557                           
   558                           
   559                           ;functions.c: 25:     TRISD = 0X00;
   560     07BF  1683               	bsf	3,5	;RP0=1, select bank1
   561     07C0  1303               	bcf	3,6	;RP1=0, select bank1
   562     07C1  0188               	clrf	8	;volatile
   563                           
   564                           ;functions.c: 26:     PORTD = 0X00;
   565     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   566     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   567     07C4  0188               	clrf	8	;volatile
   568     07C5                     l654:
   569                           
   570                           ;functions.c: 27:     TRISCbits.TRISC1 = 0;
   571     07C5  1683               	bsf	3,5	;RP0=1, select bank1
   572     07C6  1303               	bcf	3,6	;RP1=0, select bank1
   573     07C7  1087               	bcf	7,1	;volatile
   574     07C8                     l656:
   575                           
   576                           ;functions.c: 28:     PORTCbits.RC1 = 0;
   577     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   578     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   579     07CA  1087               	bcf	7,1	;volatile
   580     07CB                     l658:
   581                           
   582                           ;functions.c: 29:     TRISCbits.TRISC2 = 0;
   583     07CB  1683               	bsf	3,5	;RP0=1, select bank1
   584     07CC  1303               	bcf	3,6	;RP1=0, select bank1
   585     07CD  1107               	bcf	7,2	;volatile
   586     07CE                     l660:
   587                           
   588                           ;functions.c: 30:     PORTCbits.RC2 = 0;
   589     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   590     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   591     07D0  1107               	bcf	7,2	;volatile
   592     07D1                     l662:
   593                           
   594                           ;functions.c: 31:     TRISCbits.TRISC0 = 0;
   595     07D1  1683               	bsf	3,5	;RP0=1, select bank1
   596     07D2  1303               	bcf	3,6	;RP1=0, select bank1
   597     07D3  1007               	bcf	7,0	;volatile
   598     07D4                     l664:
   599                           
   600                           ;functions.c: 32:     PORTCbits.RC0 = 0;
   601     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   602     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   603     07D6  1007               	bcf	7,0	;volatile
   604     07D7                     l666:
   605                           
   606                           ;functions.c: 34:     SendCMD(0b00001000 | 0b00000100 | 0b00000010 | 0b00000001);
   607     07D7  300F               	movlw	15
   608     07D8  120A  118A  2797  120A  118A  	fcall	_SendCMD
   609     07DD                     l43:
   610     07DD  0008               	return
   611     07DE                     __end_of_InitApp:
   612                           
   613                           	psect	text4
   614     0797                     __ptext4:	
   615 ;; *************** function _SendCMD *****************
   616 ;; Defined at:
   617 ;;		line 16 in file "functions.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  cmd             1    wreg     unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  cmd             1    1[COMMON] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         1       0       0       0       0
   633 ;;      Temps:          1       0       0       0       0
   634 ;;      Totals:         2       0       0       0       0
   635 ;;Total ram usage:        2 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_InitApp
   641 ;;		_SendChar
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645     0797                     _SendCMD:	
   646                           ;psect for function _SendCMD
   647                           
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _SendCMD: [wreg+status,2]
   651                           ;SendCMD@cmd stored from wreg
   652     0797  00F6               	movwf	SendCMD@cmd
   653     0798                     l638:
   654                           
   655                           ;functions.c: 17:     PORTD = cmd;
   656     0798  0876               	movf	SendCMD@cmd,w
   657     0799  1283               	bcf	3,5	;RP0=0, select bank0
   658     079A  1303               	bcf	3,6	;RP1=0, select bank0
   659     079B  0088               	movwf	8	;volatile
   660     079C                     l640:
   661                           
   662                           ;functions.c: 18:     PORTCbits.RC0 = 1;
   663     079C  1407               	bsf	7,0	;volatile
   664                           
   665                           ;functions.c: 19:     _delay((unsigned long)((1)*(4000000/4000.0)));
   666     079D  30C7               	movlw	199
   667     079E  00F5               	movwf	??_SendCMD
   668     079F                     u27:
   669     079F  2FA0               	nop2
   670     07A0  0BF5               	decfsz	??_SendCMD,f
   671     07A1  2F9F               	goto	u27
   672     07A2  2FA3               	nop2
   673     07A3  2FA4               	nop2
   674     07A4                     l642:
   675                           
   676                           ;functions.c: 20:     PORTCbits.RC0 = 0;
   677     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   678     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   679     07A6  1007               	bcf	7,0	;volatile
   680     07A7                     l644:
   681                           
   682                           ;functions.c: 21:     PORTD = 0;
   683     07A7  0188               	clrf	8	;volatile
   684     07A8                     l40:
   685     07A8  0008               	return
   686     07A9                     __end_of_SendCMD:
   687     007E                     btemp	set	126	;btemp
   688     007E                     wtemp0	set	126
   689                           
   690                           	psect	idloc
   691                           
   692                           ;Config register IDLOC0 @ 0x2000
   693                           ;	unspecified, using default values
   694     2000                     	org	8192
   695     2000  3FFF               	dw	16383
   696                           
   697                           ;Config register IDLOC1 @ 0x2001
   698                           ;	unspecified, using default values
   699     2001                     	org	8193
   700     2001  3FFF               	dw	16383
   701                           
   702                           ;Config register IDLOC2 @ 0x2002
   703                           ;	unspecified, using default values
   704     2002                     	org	8194
   705     2002  3FFF               	dw	16383
   706                           
   707                           ;Config register IDLOC3 @ 0x2003
   708                           ;	unspecified, using default values
   709     2003                     	org	8195
   710     2003  3FFF               	dw	16383
   711                           
   712                           	psect	config
   713                           
   714                           ;Config register CONFIG @ 0x2007
   715                           ;	Oscillator Selection bits
   716                           ;	FOSC = XT, XT oscillator
   717                           ;	Watchdog Timer Enable bit
   718                           ;	WDTE = OFF, WDT disabled
   719                           ;	Power-up Timer Enable bit
   720                           ;	PWRTE = ON, PWRT enabled
   721                           ;	Brown-out Reset Enable bit
   722                           ;	BOREN = OFF, BOR disabled
   723                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   724                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   725                           ;	Data EEPROM Memory Code Protection bit
   726                           ;	CPD = OFF, Data EEPROM code protection off
   727                           ;	Flash Program Memory Write Enable bits
   728                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   729                           ;	In-Circuit Debugger Mode bit
   730                           ;	DEBUG = 0x1, unprogrammed default
   731                           ;	Flash Program Memory Code Protection bit
   732                           ;	CP = OFF, Code protection off
   733     2007                     	org	8199
   734     2007  3F31               	dw	16177

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print@chardir	PTR unsigned char  size(1) Largest target is 5
		 -> mensaje(COMMON[5]), 


Critical Paths under _main in COMMON

    _main->_print
    _print->_SendChar
    _SendChar->_SendCMD
    _InitApp->_SendCMD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     105
                            _InitApp
                              _print
 ---------------------------------------------------------------------------------
 (1) _print                                                2     2      0      90
                                              3 COMMON     2     2      0
                           _SendChar
 ---------------------------------------------------------------------------------
 (2) _SendChar                                             1     1      0      30
                                              2 COMMON     1     1      0
                            _SendCMD
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      15
                            _SendCMD
 ---------------------------------------------------------------------------------
 (3) _SendCMD                                              2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
     _SendCMD
   _print
     _SendChar
       _SendCMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 09:49:34 2022

                     l13 0793                       l22 07BE                       l14 0793  
                     l40 07A8                       l43 07DD                       l46 0787  
                     u10 07BE                       u11 07BD                       u27 079F  
                    l640 079C                      l642 07A4                      l650 0784  
                    l644 07A7                      l660 07CE                      l652 07BF  
                    l638 0798                      l662 07D1                      l654 07C5  
                    l646 077B                      l670 07AB                      l664 07D4  
                    l656 07C8                      l648 077E                      l672 07B3  
                    l666 07D7                      l658 07CB                      l674 07B7  
                    l668 07AA                      l676 0788                      l678 078D  
                    fsr0 0004                      indf 0000                     _main 0788  
                   btemp 007E                     start 0000          __end_of_InitApp 07DE  
        __end_of_SendCMD 07A9                    ?_main 0075               SendCMD@cmd 0076  
                  _PORTD 0008                    _TRISD 0088                    _print 07A9  
                  status 0003                    wtemp0 007E          __initialization 07DE  
           __end_of_main 0797         __end_of_SendChar 0788                   ??_main 007A  
                 ?_print 0075                ??_InitApp 0077                ??_SendCMD 0075  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 0075  
          __end_of_print 07BF                  ??_print 0078                ?_SendChar 0075  
             __pmaintext 0788                  _InitApp 07BF               ??_SendChar 0077  
                _SendCMD 0797                  __ptext1 07A9                  __ptext2 077A  
                __ptext3 07BF                  __ptext4 0797                  _mensaje 0070  
   end_of_initialization 07FC                _PORTCbits 0007                _TRISCbits 0087  
          __pidataCOMMON 0775      start_initialization 07DE                ___latbits 0002  
      SendChar@character 0077                 ?_InitApp 0075                 ?_SendCMD 0075  
               _SendChar 077A             print@chardir 0079  
